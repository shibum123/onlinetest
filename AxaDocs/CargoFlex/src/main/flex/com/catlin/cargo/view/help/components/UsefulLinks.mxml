<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml"
		 width="100%"
		 height="100%"
		 initialize="initializeHandler(event)">
	
	<mx:Script>
		<![CDATA[
			import com.catlin.cargo.bundles.RB_ui;
			
			import mx.collections.ArrayCollection;
			import mx.collections.Sort;
			import mx.collections.SortField;
			import mx.events.FlexEvent;

			public var _dataProvider:ArrayCollection;

			[Bindable]
			public var showArchivedItems:Boolean=false;

			private var _dpSort:Sort;

			private var _filterText:String="";

			[Bindable(event="dataProviderUpdated")]
			public function get dataProvider():ArrayCollection {
				return _dataProvider;
			}

			public function set dataProvider(dp:ArrayCollection):void {
				_dataProvider=dp;
				initializeDataProvider(); 
				this.dispatchEvent(new Event("dataProviderUpdated"));
			}

			private function filterBy_changeHandler(event:Event):void {
				if (filterBy.text != null && filterBy.text.length > 2) {
					_filterText=filterBy.text.toLocaleLowerCase();
					dataProvider.filterFunction=filterSearchFunction;
				} else {
					dataProvider.filterFunction=filterArchivedItemsFunction;
				}
				changeFilter();
			}

			private function initializeDataProvider():void {

				_dataProvider.sort=_dpSort;
				_dataProvider.filterFunction=filterArchivedItemsFunction;
				_dataProvider.refresh();
			}

			private function initializeHandler(event:FlexEvent):void {
				_dataProvider=new ArrayCollection();
				_dpSort=new Sort();
				_dpSort.fields=[new SortField("name")];
				//_dpSort.fields=[new SortField("displayOrder")];
				
				initializeDataProvider();
			}
			
			public function set sortField(field:String):void {
				_dpSort.fields=[new SortField(field)];
				initializeDataProvider();
			}

			private function changeFilter():void {
				dataProvider.refresh();
			}

			private function filterArchivedItemsFunction(item:Object):Boolean {
				if (!showArchivedItems && item.hasOwnProperty("active") && !item.active)
					return false;
				return true;
			}

			private function filterSearchFunction(item:Object):Boolean {
				if (!filterArchivedItemsFunction(item))
					return false;

				var itemName:String=item ? item.name : "";
				if (itemName.toLowerCase().indexOf(this._filterText) >= 0) {
					return true;
				} else {
					return false;
				}
			}
		]]>
	</mx:Script>

	<mx:HBox width="100%"
			 horizontalAlign="middle">
		<mx:Label text="{resourceManager.getString(RB_ui.RB_NAME, RB_ui.SEARCH)}"/>
		<mx:TextInput id="filterBy"
					  change="filterBy_changeHandler(event)"
					  height="18"/>
	</mx:HBox>

	<mx:TileList id="tileList"
				 borderStyle="none"
				 width="100%"
				 height="100%"
				 dataProvider="{dataProvider}"
				 itemRenderer="com.catlin.cargo.view.help.UsefulLinksItemRenderer"
				 selectable="false"/>

</mx:VBox>
