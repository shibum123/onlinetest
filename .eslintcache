[{"C:\\Projects\\onlinetest\\src\\index.js":"1","C:\\Projects\\onlinetest\\src\\App.js":"2","C:\\Projects\\onlinetest\\src\\reportWebVitals.js":"3","C:\\Projects\\onlinetest\\src\\components\\Main.jsx":"4","C:\\Projects\\onlinetest\\src\\reducers\\mainReducer.js":"5","C:\\Projects\\onlinetest\\src\\configureStore.js":"6","C:\\Projects\\onlinetest\\src\\components\\OptionView.js":"7","C:\\Projects\\onlinetest\\src\\components\\settings\\Settings.jsx":"8","C:\\Projects\\onlinetest\\src\\components\\questionform\\QuestionForm.js":"9","C:\\Projects\\onlinetest\\src\\components\\SpellingsView.jsx":"10"},{"size":646,"mtime":1609855879897,"results":"11","hashOfConfig":"12"},{"size":1161,"mtime":1613908734324,"results":"13","hashOfConfig":"12"},{"size":375,"mtime":1609765807711,"results":"14","hashOfConfig":"12"},{"size":5467,"mtime":1613908653708,"results":"15","hashOfConfig":"12"},{"size":3146,"mtime":1613910381017,"results":"16","hashOfConfig":"12"},{"size":233,"mtime":1609785402425,"results":"17","hashOfConfig":"12"},{"size":4065,"mtime":1611437145349,"results":"18","hashOfConfig":"12"},{"size":3722,"mtime":1613908471704,"results":"19","hashOfConfig":"12"},{"size":3698,"mtime":1611421123102,"results":"20","hashOfConfig":"12"},{"size":4936,"mtime":1613928340934,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1j3ha8i",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Projects\\onlinetest\\src\\index.js",[],["44","45"],"C:\\Projects\\onlinetest\\src\\App.js",[],"C:\\Projects\\onlinetest\\src\\reportWebVitals.js",[],"C:\\Projects\\onlinetest\\src\\components\\Main.jsx",["46","47","48","49","50","51","52"],"C:\\Projects\\onlinetest\\src\\reducers\\mainReducer.js",["53","54"],"C:\\Projects\\onlinetest\\src\\configureStore.js",[],"C:\\Projects\\onlinetest\\src\\components\\OptionView.js",["55","56","57"],"import React, { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport img from '../images/img1.png';\r\nimport './OptionView.scss';\r\nimport parse from 'html-react-parser';\r\n\r\nexport const OptionView = (props) => {\r\n\r\n    const question = props.question;\r\n    const index = props.index;\r\n    const showAnswers = useSelector((state) => state.main.showAnswers);\r\n\r\n    const getResult = (quest) => {\r\n        const result = [];\r\n        if (quest.selectedOptions) {\r\n            quest.selectedOptions.map((item, index) => {\r\n                if (item === true) result.push(quest.options[index]);\r\n            });\r\n        }\r\n        return result;\r\n    }\r\n\r\n    const getOption = (question) => {\r\n\r\n        const getOptionClass = (correctAnswer, showAnswers) => {\r\n            if (correctAnswer && showAnswers) {\r\n                return 'options-label correct'\r\n            } else if (!correctAnswer && showAnswers) {\r\n                return 'options-label wrong'\r\n            } else if (!showAnswers) {\r\n                return 'options-label'\r\n            }\r\n        }\r\n\r\n        if (question.type === 'choice') {\r\n            return question.options.map((option, index) => {\r\n                const selected = question.selectedOptions ? question.selectedOptions[index] : false;\r\n                const correctAnswer = question.ans === option;\r\n\r\n                return <div key={`Q${question.id}OPT${index}`} >\r\n                    <label className={getOptionClass(correctAnswer, showAnswers)}>\r\n                        {selected && !showAnswers && <input id={`Q${question.id}OPT${index}`} type=\"checkbox\" checked value={option} onChange={(event) => props.onChange(event, index)} />}\r\n                        {!selected && !showAnswers && <input id={`Q${question.id}OPT${index}`} type=\"checkbox\" value={option} onChange={(event) => props.onChange(event, index)} />}\r\n                        {selected && showAnswers && <input id={`Q${question.id}OPT${index}`} type=\"checkbox\" checked disabled value={option} />}\r\n                        {!selected && showAnswers && <input id={`Q${question.id}OPT${index}`} type=\"checkbox\" disabled value={option} />}\r\n                    &nbsp;&nbsp;&nbsp;{parse(option)}</label>\r\n\r\n                </div>\r\n            })\r\n        } else {\r\n            if (!showAnswers) {\r\n                return <input key={`Q${question.id}OPT0`} type=\"text\" style={{ 'width': '200px' }} onChange={props.onTextChange} />\r\n            } else {\r\n\r\n                const correct = getCorrect(question);\r\n\r\n                return <div key={`Q${question.id}OPT0`}>\r\n                    <input type=\"text\" style={{ 'width': '200px' }} disabled value={question.selectedOptions ? question.selectedOptions[0] : ''} />\r\n                    &nbsp;&nbsp;&nbsp;\r\n                    {question.ans}\r\n                    &nbsp;&nbsp;&nbsp;\r\n                    {\r\n                        correct &&\r\n                        <i className=\"fa fa-check\" style={{ 'font-size': '20px', 'color': 'green' }}></i>\r\n                    }\r\n                    {\r\n                        !correct &&\r\n                        <i className=\"fa fa-times\" style={{ 'font-size': '20px', 'color': 'red' }}></i>\r\n\r\n                    }\r\n                </div>\r\n            }\r\n        }\r\n    }\r\n\r\n    const getCorrect = (question) => {\r\n        if (question.type === 'choice') {\r\n            return question.ans.toString() === getResult(question).toString()\r\n        } else {\r\n            return question.selectedOptions ? (question.ans.toString() === question.selectedOptions.toString()) : false;\r\n        }\r\n    }\r\n\r\n    return question ? <div className={showAnswers && !getCorrect(question) ? 'optionview__wrong' : 'optionview__correct'}>\r\n        <div className=\"question\" key={question.id} dangerouslySetInnerHTML={{ __html: `Q${index + 1}: ${question.q}` }} />\r\n        {\r\n            question.img && <img src={question.img} />\r\n        }\r\n        <div className=\"options\">{getOption(question)}</div>\r\n    </div> : null;\r\n}\r\n\r\nexport default OptionView;\r\n","C:\\Projects\\onlinetest\\src\\components\\settings\\Settings.jsx",[],"C:\\Projects\\onlinetest\\src\\components\\questionform\\QuestionForm.js",[],"C:\\Projects\\onlinetest\\src\\components\\SpellingsView.jsx",["58","59","60"],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":11,"column":11,"nodeType":"67","messageId":"68","endLine":11,"endColumn":19},{"ruleId":"69","severity":1,"message":"70","line":18,"column":8,"nodeType":"71","endLine":18,"endColumn":10,"suggestions":"72"},{"ruleId":"65","severity":1,"message":"73","line":24,"column":12,"nodeType":"67","messageId":"68","endLine":24,"endColumn":16},{"ruleId":"65","severity":1,"message":"74","line":24,"column":18,"nodeType":"67","messageId":"68","endLine":24,"endColumn":25},{"ruleId":"75","severity":1,"message":"76","line":31,"column":31,"nodeType":"77","messageId":"78","endLine":31,"endColumn":33},{"ruleId":"75","severity":1,"message":"76","line":49,"column":57,"nodeType":"77","messageId":"78","endLine":49,"endColumn":59},{"ruleId":"75","severity":1,"message":"76","line":95,"column":28,"nodeType":"77","messageId":"78","endLine":95,"endColumn":30},{"ruleId":"65","severity":1,"message":"79","line":15,"column":7,"nodeType":"67","messageId":"68","endLine":15,"endColumn":14},{"ruleId":"80","severity":1,"message":"81","line":25,"column":1,"nodeType":"82","endLine":73,"endColumn":3},{"ruleId":"65","severity":1,"message":"83","line":1,"column":17,"nodeType":"67","messageId":"68","endLine":1,"endColumn":26},{"ruleId":"75","severity":1,"message":"76","line":16,"column":53,"nodeType":"77","messageId":"78","endLine":16,"endColumn":55},{"ruleId":"84","severity":1,"message":"85","line":87,"column":29,"nodeType":"86","endLine":87,"endColumn":55},{"ruleId":"69","severity":1,"message":"87","line":23,"column":8,"nodeType":"71","endLine":23,"endColumn":10,"suggestions":"88"},{"ruleId":"75","severity":1,"message":"76","line":52,"column":37,"nodeType":"77","messageId":"78","endLine":52,"endColumn":39},{"ruleId":"89","severity":1,"message":"90","line":107,"column":42,"nodeType":"86","endLine":107,"endColumn":124},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"no-unused-vars","'jsonData' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["93"],"'time' is assigned a value but never used.","'setTime' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'shuffle' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'useEffect' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'dispatch' and 'week'. Either include them or remove the dependency array.",["94"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",{"desc":"95","fix":"96"},{"desc":"97","fix":"98"},"Update the dependencies array to be: [dispatch]",{"range":"99","text":"100"},"Update the dependencies array to be: [dispatch, week]",{"range":"101","text":"102"},[638,640],"[dispatch]",[853,855],"[dispatch, week]"]