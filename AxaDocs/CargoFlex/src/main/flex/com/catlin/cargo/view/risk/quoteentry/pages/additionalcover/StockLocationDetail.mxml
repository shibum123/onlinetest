<?xml version="1.0" encoding="utf-8"?>
<mx:HBox xmlns:mx="http://www.adobe.com/2006/mxml"
		 xmlns:model="com.catlin.cargo.model.core.risk.*"
		 xmlns:currency="com.catlin.ui.flex.widgets.currency.*"
		 xmlns:tips="com.catlin.cargo.view.help.*"
		 horizontalGap="0"
		 verticalAlign="middle"
		 creationComplete="onCreationCompleteHandler(event)" >
	 

	<mx:Script>
		<![CDATA[
			import com.catlin.cargo.bundles.RB_ui;
			import com.catlin.cargo.model.core.risk.Risk;
			import com.catlin.cargo.model.geo.address.Address;
			import com.catlin.cargo.model.security.UserInfo;
			
			import mx.binding.utils.ChangeWatcher;
			import mx.events.FlexEvent;

			[Bindable]
			public var currentIndex:int;

			[Bindable]
			public var quote:Risk;

			[Bindable]
			public var userInfo:UserInfo=null;

			private function deleteRow(event:MouseEvent):void {
				dispatchEvent(new StockLocationDeleteEvent(currentIndex, true));
			}

			private function deleteButtonClicked(event:MouseEvent):void {
				if (event.currentTarget.enabled) {
					deleteRow(event);
				}
			}

			private function addressLinkClicked():void {
				if (mdlStockLocation.addressAsSingleLine.length == 0) {
					onEnterAddress();
				} else {
					onEditAddress();
				}
			}

			private function onEnterAddress():void {
				dispatchEvent(new StockLocationAddressEvent(StockLocationAddressEvent.STOCK_LOCATION_ADDRESS_ENTER, currentIndex));
			}

			private function onEditAddress():void {
				dispatchEvent(new StockLocationAddressEvent(StockLocationAddressEvent.STOCK_LOCATION_ADDRESS_EDIT, currentIndex));
			}

			public function updateAddressLabel():void {
				lbtAddressAsSingleLine.label=getAddressLabel(null);
			}

			private function getAddressLabel(address:Address):String {
				return mdlStockLocation.addressAsSingleLine.length == 0 ? resourceManager.getString(RB_ui.RB_NAME, RB_ui.STOCK_LOCATION_DETAIL_ENTER_ADDRESS) : mdlStockLocation.addressAsSingleLine;
			}
			
			protected function onCreationCompleteHandler(event:FlexEvent):void
			{
				var w:ChangeWatcher = ChangeWatcher.watch(lbtAddressAsSingleLine, "errorString", displayLinkError);
			}
			
			private var originalLinkColor:* = null; 
			private function displayLinkError(item:Event):void {
				
				if (!originalLinkColor)
					originalLinkColor = lbtAddressAsSingleLine.getStyle("color");
				
				if (lbtAddressAsSingleLine.errorString == null || lbtAddressAsSingleLine.errorString == "") {
					lbtAddressAsSingleLine.setStyle("color", originalLinkColor);
				} else {
					lbtAddressAsSingleLine.setStyle("color", lbtAddressAsSingleLine.getStyle("errorColor"));
				}
			}
			
		]]>
	</mx:Script>

	<tips:TipHelper id="tipHelper"/>

	<model:StockLocation id="mdlStockLocation">
		<model:alarmed>{alarmed.selectedValue}</model:alarmed>
		<model:standardConstruction>{standardConstruction.selectedValue}</model:standardConstruction>
		<model:limit>{Number(limit.data)}</model:limit>
	</model:StockLocation>

	<mx:VBox verticalGap="0"
			 horizontalScrollPolicy="off"
			 verticalAlign="bottom"
			 height="100%"
			 width="250">
		<mx:LinkButton id="lbtAddressAsSingleLine"
					   click="addressLinkClicked()"
					   label="{getAddressLabel(mdlStockLocation.address)}"
					   styleName="link"
					   enabled="{quote.editable}"/>
	</mx:VBox>

	<mx:HBox width="155">
		<mx:RadioButtonGroup id="alarmed"
							 enabled="{quote.editable}"/>
		<mx:RadioButton id="rdoAlarmedYes"
						label="{resourceManager.getString(RB_ui.RB_NAME, RB_ui.YES)}"
						groupName="alarmed"
						value="true"
						selected="{mdlStockLocation.alarmed == true}"/>
		<mx:RadioButton id="rdoAlarmedNo"
						label="{resourceManager.getString(RB_ui.RB_NAME, RB_ui.NO)}"
						groupName="alarmed"
						value="false"
						selected="{mdlStockLocation.alarmed == false}"/>
	</mx:HBox>

	<mx:HBox width="140">
		<mx:RadioButtonGroup id="standardConstruction"
							 enabled="{quote.editable}"/>
		<mx:RadioButton id="rdoStdConstructionYes"
						label="{resourceManager.getString(RB_ui.RB_NAME, RB_ui.YES)}"
						groupName="standardConstruction"
						value="true"
						selected="{mdlStockLocation.standardConstruction == true}"/>
		<mx:RadioButton id="rdoStdConstructionNo"
						label="{resourceManager.getString(RB_ui.RB_NAME, RB_ui.NO)}"
						groupName="standardConstruction"
						value="false"
						selected="{mdlStockLocation.standardConstruction == false}"/>
	</mx:HBox>

	<currency:CurrencyInput id="limit"
							data="{mdlStockLocation.limit}"
							width="90"
							enabled="{quote.editable}"
							currencySymbol=""/>
	<mx:Spacer width="10"/>
	<mx:Image source="@Embed(source='/assets/images/icon_delete.gif')"
			  click="deleteButtonClicked(event)"
			  alpha="{((quote.editable &amp;&amp; (quote.stockCover.locations.getItemIndex(mdlStockLocation) != 0 || quote.stockCover.locations.length > 1)) ? 1.0 : 0.3)}"
			  verticalAlign="bottom"
			  enabled="{quote.editable &amp;&amp; (quote.stockCover.locations.getItemIndex(mdlStockLocation) != 0 || quote.stockCover.locations.length > 0)}"
			  buttonMode="{quote.editable &amp;&amp; (quote.stockCover.locations.getItemIndex(mdlStockLocation) != 0 || quote.stockCover.locations.length > 1)}" />
			  <!--visible="{quote.stockCover.locations.getItemIndex(mdlStockLocation) != 0 || quote.stockCover.locations.length > 1}"-->

</mx:HBox>
