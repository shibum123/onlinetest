<?xml version="1.0" encoding="utf-8"?>
<mx:GridRow xmlns:mx="http://www.adobe.com/2006/mxml"
			xmlns:help="com.catlin.cargo.view.help.*"
			xmlns:currency="com.catlin.ui.flex.widgets.currency.*"
			xmlns:risk="com.catlin.cargo.model.core.risk.*"
			creationComplete="registerTipHelper();"
			preinitialize="handlePreinitialize();">

	
	<help:TipHelper id="tipHelper"/>

	<mx:Script>
		<![CDATA[
			import com.catlin.cargo.bundles.RB_ui;
			import com.catlin.cargo.model.core.risk.Risk;
			import com.catlin.cargo.model.geo.location.Location;

			[Bindable]
			public var quote:Risk;
			
			[Bindable]
			public var sending:com.catlin.cargo.model.core.risk.Sendings;

			[Bindable]
			public var sendingLocked:Boolean;

			private var originalRouteValue:Number;

			private function registerTipHelper():void {

				var key1:String = (sending && sending.type && sending.type.code ) ? sending.type.code : "";
				var key2:String = (route && route.destinationLocation && route.destinationLocation.code ) ? route.destinationLocation.code : "";
				var toolTipKey:String = RB_ui.resolveSendingsToolTipCodes(key1, key2);
				sendingsAmount.toolTip = tipHelper.getTips(sendingsAmount, toolTipKey);
			}
			
			private function updateSendingsValue(event:Event):void {
				if (quote != null) {
					quote.updateTotals();
				}
			}

			private function originalRouteValueIsZero(value:Number):Boolean {
				if (isNaN(originalRouteValue)) {
					originalRouteValue=value;
					return !(value > 0);
				} else {
					return !(originalRouteValue > 0);
				}
			}

			protected function handlePreinitialize():void {
//				BindingManager.debugBinding("sendingsGridItem.sendingLocked");
//				BindingManager.debugBinding("sendingsGridItem.route");
			}
		]]>
	</mx:Script>

	<risk:Route id="route">
		<risk:value>{Number(sendingsAmount.data)}</risk:value>
	</risk:Route>

	<mx:GridItem>
		<mx:Text text="{RB_ui.resolveDataBaseCode(sending.type)} {sending.type.zoneRelevant?(route.destinationLocation.code == Location.DOMESTIC_CODE?quote.countryOfRisk.name:route.destinationLocation.name):''}"/>
	</mx:GridItem>
	<mx:GridItem>
		<currency:CurrencyInput hasDecimalPlaces="false"
								id="sendingsAmount"
								data="{route.value}"
								currencySymbol=""
								enabled="{quote.editable &amp;&amp; (!sendingLocked || (sendingLocked &amp;&amp; originalRouteValueIsZero(route.value)))}"
								dataChange="updateSendingsValue(event);"/>
	</mx:GridItem>
</mx:GridRow>
