<?xml version="1.0" encoding="utf-8"?>
<mx:Object xmlns:mx="http://www.adobe.com/2006/mxml"
		   xmlns:model="com.catlin.cargo.model.core.risk.*"
		   xmlns:rules="com.catlin.ui.flex.validator.rules.*"
		   xmlns:validators="com.catlin.ui.flex.validators.*"
		   xmlns:validator="com.catlin.ui.flex.validator.*">

	<mx:Script>
		<![CDATA[

			import com.catlin.cargo.model.core.sourceassociation.Channel;
			import com.catlin.cargo.bundles.RB_ui;
			
			[Bindable]
			public var window:BrokerOfficeDetailVBox;

			public function create():Array {
				var rules:Array=new Array();
				rules[brokerOfficeDetailVBox.name]=brokerOfficeDetailVBox;
				return rules;
			}

			public function brokerIdRequired(validator:Validator, ss:SourceSystemCheckBox):void {
				validator.required=ss.txiExternalBrokerId.visible;
			}

		]]>
	</mx:Script>

	<validator:Page id="brokerOfficeDetailVBox"
					name="brokerOfficeDetailVBox">
		<validator:validatorRules>
			<mx:ArrayCollection>
				<!-- Broker detail -->
				<rules:RepeaterValidatorRule dataProvider="{window.sourceSystemCheckBoxes}"
											 context="sourceSystemCheckBoxes[$index].txiExternalBrokerId"
											 message="{RB_ui.rm.getString(RB_ui.RB_NAME, RB_ui.BROKER_OFFICE_DETAIL_VALIDATION_REQUIRED_EXTERNAL_BROKER_ID)}"
											 validatorDecorator="brokerIdRequired"
											 validatorClass="mx.validators.Validator"
											 valuePropertyChain="{['txiExternalBrokerId', 'text']}"/>
				<rules:SimpleValidatorRule context="txiBrokerName"
										   message="{RB_ui.rm.getString(RB_ui.RB_NAME, RB_ui.BROKER_OFFICE_DETAIL_VALIDATION_REQUIRED_BROKER_OFFICE)}"
										   value="{window.txiBrokerName.text}">
					<rules:validator>
						<mx:Validator required="true"/>
					</rules:validator>
				</rules:SimpleValidatorRule>
				<rules:SimpleValidatorRule context="txiBrokerCode"
										   message="{RB_ui.rm.getString(RB_ui.RB_NAME, RB_ui.BROKER_OFFICE_DETAIL_VALIDATION_REQUIRED_BROKER_CODE)}"
										   value="{window.txiBrokerCode.text}">
					<rules:validator>
						<mx:Validator required="true"/>
					</rules:validator>
				</rules:SimpleValidatorRule>
				<rules:SimpleValidatorRule context="cboUnderwriter"
										   message="{RB_ui.rm.getString(RB_ui.RB_NAME, RB_ui.BROKER_OFFICE_DETAIL_VALIDATION_REQUIRED_UNDERWRITER)}"
										   value="{window.cboUnderwriter.selectedItem}">
					<rules:validator>
						<mx:Validator required="true"/>
					</rules:validator>
				</rules:SimpleValidatorRule>
				<rules:SimpleValidatorRule context="cboFrameOriginatingOffice"
										   message="{RB_ui.rm.getString(RB_ui.RB_NAME, RB_ui.BROKER_OFFICE_DETAIL_VALIDATION_REQUIRED_ORIGINATING_OFFICE)}"
										   value="{window.cboFrameOriginatingOffice.selectedItem}">
					<rules:validator>
						<mx:Validator required="true"/>
					</rules:validator>
				</rules:SimpleValidatorRule>
				<rules:SimpleValidatorRule context="cboDefaultCurrency"
										   message="{RB_ui.rm.getString(RB_ui.RB_NAME, RB_ui.BROKER_OFFICE_DETAIL_VALIDATION_REQUIRED_DEFAULT_CURRENCY)}"
										   value="{window.cboDefaultCurrency.selectedItem}">
					<rules:validator>
						<mx:Validator required="true"/>
					</rules:validator>
				</rules:SimpleValidatorRule>
				<rules:SimpleValidatorRule context="cboCountryOfRisk"
										   message="{RB_ui.rm.getString(RB_ui.RB_NAME, RB_ui.BROKER_OFFICE_DETAIL_VALIDATION_REQUIRED_COUNTRY_OF_RISK)}"
										   value="{window.cboCountryOfRisk.selectedItem}">
					<rules:validator>
						<mx:Validator required="true"/>
					</rules:validator>
				</rules:SimpleValidatorRule>

				<!-- Financial controls -->
				<rules:SimpleValidatorRule context="curDefaultMADPercentage"
										   message="{RB_ui.rm.getString(RB_ui.RB_NAME, RB_ui.BROKER_OFFICE_DETAIL_VALIDATION_REQUIRED_DEFAULT_MAD_PERCENTAGE)}"
										   value="{window.curDefaultMADPercentage.data}">
					<rules:validator>
						<mx:NumberValidator required="true"
											allowNegative="false"
											minValue="0"
											maxValue="100"/>
					</rules:validator>
				</rules:SimpleValidatorRule>
				<rules:SimpleValidatorRule context="curPremiumLimitAnnual"
										   message="{RB_ui.rm.getString(RB_ui.RB_NAME, RB_ui.BROKER_OFFICE_DETAIL_VALIDATION_REQUIRED_PREMIUM_MINIMUN_LIMIT_ANNUAL)}"
										   value="{window.curPremiumLimitAnnual.data}">
					<rules:validator>
						<mx:NumberValidator required="true"
											allowNegative="false"
											minValue="0.00001"
											maxValue="100000000000000"/>
					</rules:validator>
				</rules:SimpleValidatorRule>
				<rules:SimpleValidatorRule context="curPremiumLimitSingle"
										   message="{RB_ui.rm.getString(RB_ui.RB_NAME, RB_ui.BROKER_OFFICE_DETAIL_VALIDATION_REQUIRED_PREMIUM_MINIMUN_LIMIT_SINGLE_TRIP)}"
										   value="{window.curPremiumLimitSingle.data}">
					<rules:validator>
						<mx:NumberValidator required="true"
											allowNegative="false"
											minValue="0.00001"
											maxValue="100000000000000"/>
					</rules:validator>
				</rules:SimpleValidatorRule>
				<rules:SimpleValidatorRule context="curMinimumPremiumAnnual"
										   message="{RB_ui.rm.getString(RB_ui.RB_NAME, RB_ui.BROKER_OFFICE_DETAIL_VALIDATION_REQUIRED_PREMIUM_MINIMUN_ANUAL_COVER)}"
										   value="{window.curMinimumPremiumAnnual.data}">
					<rules:validator>
						<mx:NumberValidator required="true"
											allowNegative="false"
											minValue="0.00001"
											maxValue="100000000000000"/>
					</rules:validator>
				</rules:SimpleValidatorRule>
				<rules:SimpleValidatorRule context="curMinimumPremiumSingle"
										   message="{RB_ui.rm.getString(RB_ui.RB_NAME, RB_ui.BROKER_OFFICE_DETAIL_VALIDATION_REQUIRED_PREMIUM_MINIMUN_SINGLE_TRIP)}"
										   value="{window.curMinimumPremiumSingle.data}">
					<rules:validator>
						<mx:NumberValidator required="true"
											allowNegative="false"
											minValue="0.00001"
											maxValue="100000000000000"/>
					</rules:validator>
				</rules:SimpleValidatorRule>
				<rules:SimpleValidatorRule context="curMinimumNetApForMta"
										   message="{RB_ui.rm.getString(RB_ui.RB_NAME, RB_ui.BROKER_OFFICE_DETAIL_VALIDATION_REQUIRED_MINIMUM_NET_AP_FOR_MTA)}"
										   value="{window.curMinimumNetApForMta.data}">
					<rules:validator>
						<mx:NumberValidator required="true"
											allowNegative="false"
											minValue="0.00001"
											maxValue="100000000000000"/>
					</rules:validator>
				</rules:SimpleValidatorRule>
				<rules:SimpleValidatorRule context="numDaysToSettle"
										   message="{RB_ui.rm.getString(RB_ui.RB_NAME, RB_ui.BROKER_OFFICE_DETAIL_VALIDATION_REQUIRED_DAYS_TO_SETTLE)}"
										   value="{window.numDaysToSettle.data}">
					<rules:validator>
						<mx:NumberValidator required="true"
											allowNegative="false"
											minValue="0.00001"/>
					</rules:validator>
				</rules:SimpleValidatorRule>
				<rules:SimpleValidatorRule context="pctDefaultCommission"
										   message="{RB_ui.rm.getString(RB_ui.RB_NAME, RB_ui.BROKER_OFFICE_DETAIL_VALIDATION_REQUIRED_PCT_DEFAULT_COMMISSION)}"
										   value="{window.pctDefaultCommission.data}">
					<rules:validator>
						<mx:NumberValidator required="true"
											allowNegative="false"
											minValue="0.00001"/>
					</rules:validator>
				</rules:SimpleValidatorRule>
				<rules:SimpleValidatorRule context="pctDiscountCap"
										   message="{RB_ui.rm.getString(RB_ui.RB_NAME, RB_ui.BROKER_OFFICE_DETAIL_VALIDATION_REQUIRED_PCT_DISCOUNT_CAP)}"
										   value="{window.pctDiscountCap.data}">
					<rules:validator>
						<mx:NumberValidator required="{window.cbxAdjustPremium.selected}"
											allowNegative="false"
											minValue="0.00001"/>
					</rules:validator>
				</rules:SimpleValidatorRule>
				<rules:SimpleValidatorRule context="numLoading"
										   message="{RB_ui.rm.getString(RB_ui.RB_NAME, RB_ui.BROKER_OFFICE_DETAIL_VALIDATION_REQUIRED_NUM_LOADING)}"
										   value="{window.numLoading.data}">
					<rules:validator>
						<mx:NumberValidator required="true"
											allowNegative="false"
											minValue="0.00001"/>
					</rules:validator>
				</rules:SimpleValidatorRule>
			</mx:ArrayCollection>
		</validator:validatorRules>
	</validator:Page>
</mx:Object>
